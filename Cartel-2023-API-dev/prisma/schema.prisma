datasource db {
  url      = env("DATABASE_URL")
  provider = "postgresql"
}

generator client {
  provider = "prisma-client-js"
}


model School {
    id    Int    @id @default(autoincrement())
    name  String @unique
    teams Team[]
    lastUpdate DateTime @default(now())
    @@map("school")
}

model Team {
    id       Int     @id @default(autoincrement())
    name     String
    sport    String
    scores   Score[]
    school   School  @relation(fields: [schoolId], references: [id], onDelete: Cascade)
    schoolId Int
    lastUpdate DateTime @default(now())
    @@map("team")
}

model Place {
    id        Int     @id @default(autoincrement())
    name      String  @unique
    address   String
    latitude  Float
    longitude Float
    isHotel   Boolean @default(false)
    events    Event[]
    lastUpdate DateTime @default(now())
    @@map("place")
}

model Event {
    id       Int      @id @default(autoincrement())
    name     String
    sport    String
    date     DateTime
    finished Boolean  @default(false)
    place    Place    @relation(fields: [placeId], references: [id], onDelete: Cascade)
    placeId  Int
    scores   Score[]
    lastUpdate DateTime @default(now())
    @@map("event")
}

model Score {
    id      Int   @id @default(autoincrement())
    value   Float @default(0)
    event   Event @relation(fields: [eventId], references: [id], onDelete: Cascade)
    eventId Int
    team    Team  @relation(fields: [teamId], references: [id], onDelete: Cascade)
    teamId  Int
    @@map("score")
}

// model for web-push subscription
model Subscription {
    id      Int      @id @default(autoincrement())
    endpoint String
    keys    String
    @@map("subscription")
}

model Logs {
    id      Int      @id @default(autoincrement())
    date    DateTime @default(now())
    user String
    action String
    url String
    data String
    @@map("logs")
}